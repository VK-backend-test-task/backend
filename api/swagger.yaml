openapi: 3.0.0
info:
  title: Backend for Docker containers ping info service
  version: 0.1.0
servers:
- url: http://backend
  description: Backend
paths:
  /pings:
    get:
      summary: Получить информацию о пингах
      parameters:
      - $ref: '#/components/parameters/ContainerIP'
      - $ref: '#/components/parameters/OldestFirst'
      - $ref: '#/components/parameters/FilterSuccess'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Offset'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PingInfo'
        "400":
          description: Ошибка на стороне пользователя
        "500":
          description: Ошибка на стороне сервера
    put:
      summary: Загрузить информацию о пингах
      requestBody:
        description: Список результатов пинга
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PingInfo'
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Ошибка на стороне пользователя
        "500":
          description: Ошибка на стороне сервера
  /pings/aggregate:
    get:
      summary: Получить информацию о контейнерах и их последнем пинге
      parameters:
      - $ref: '#/components/parameters/OldestFirst'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Offset'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContainerInfo'
                x-content-type: application/json
        "400":
          description: Ошибка на стороне пользователя
        "500":
          description: Ошибка на стороне сервера
components:
  parameters:
    ContainerIP:
      in: query
      name: container_ip
      example: 127.0.0.1
      description: IP контейнера, для которого выдавать список пингов
      required: false
      style: form
      explode: true
      schema:
        type: string
    Limit:
      in: query
      name: limit
      description: Максимальное количество выдаваемых результатов
      required: false
      style: form
      explode: true
      schema:
        type: integer
        minimum: 0
    Offset:
      in: query
      name: offset
      description: Количество результатов, которое необходимо пропустить
      required: false
      style: form
      explode: true
      schema:
        type: integer
        minimum: 0
    OldestFirst:
      in: query
      name: oldest_first
      description: Сортировать начиная со старых записей
      required: false
      style: form
      explode: true
      schema:
        type: boolean
    FilterSuccess:
      in: query
      name: success
      required: false
      style: form
      explode: true
      description: Возвращать только успешные или неудавшиеся записи
      schema:
        type: boolean
  schemas:
    ContainerInfo:
      required: [ip]
      type: object
      properties:
        ip:
          type: string
        last_ping:
          type: string
          format: date-time
        last_success:
          type: string
          format: date-time
      example:
        ip: 127.0.0.1
        last_ping: 2025-02-08T17:17:51.873Z
        last_success: 2025-02-08T17:17:51.873Z
    PingInfo:
      type: object
      properties:
        ip:
          type: string
        timestamp:
          type: string
          format: date-time
        success:
          type: boolean
      example:
        ip: 127.0.0.1
        timestamp: 2025-02-08T17:17:51.873Z
        success: true
